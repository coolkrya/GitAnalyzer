---
title: "Анализ синтетических данных коммитов"
format:
  html:
    code-fold: false
    code-tools: false
    toc: true
    toc-depth: 2
    number-sections: true
    theme: cosmo
    df-print: paged
  pdf: default
execute:
  echo: false  # скрыть исходный код
  warning: false
  message: false
---

```{r}

# Подгрузка библиотек

library(isotree)
library(dplyr)
library(lubridate)
library(ggplot2)
library(readr)
library(purrr)
library(tidyr)

library(knitr)
library(kableExtra)

library(httr)
library(dplyr)
library(jsonlite)
library(stringr)
library(dotenv)


  
repo_id <- "3663909"
  
# Функция для получения всех коммитов
get_all_commits <- function(repo_id, max_pages = 10) {
  all_commits <- list()
  page <- 1
  
  while (page <= max_pages) {
    url <- paste0(
      "https://gitlab.com/api/v4/projects/", 
      repo_id, 
      "/repository/commits?per_page=100&page=", 
      page
    )
    
    response <- GET(url)
    commits <- content(response, "parsed", simplifyDataFrame = TRUE)
    
    if (length(commits) == 0) break  # Если коммитов больше нет, выходим
    
    all_commits <- append(all_commits, list(commits))
    page <- page + 1
  }
    
  # Объединяем все страницы в один датафрейм
  do.call(rbind, all_commits)
}
  
# Получаем список коммитов
commits_df <- get_all_commits(repo_id, max_pages = 5)

# Создаем пустой список для диффов
diffs_list <- list()

# Для каждого коммита получаем DIFF
for (i in seq_len(nrow(commits_df))) {
  commit_sha <- commits_df$id[i]
  diff_url <- paste0("https://gitlab.com/api/v4/projects/", repo_id, "/repository/commits/", commit_sha, "/diff")
  
  diff_response <- GET(diff_url)
  
  # Обработка возможной ошибки
  if (status_code(diff_response) != 200) next
  
  diff_data <- content(diff_response, "parsed", simplifyDataFrame = TRUE)
  
  if (length(diff_data) == 0) next
  
  # Добавляем commit_id в каждый элемент
  diff_data$commit_id <- commit_sha
  
  # Добавим расчет добавленных и удаленных строк из поля diff
  diff_data <- diff_data %>%
    rowwise() %>%
    mutate(
      lines_added = str_count(diff, regex("^\\+[^+]", multiline = TRUE)),
      lines_removed = str_count(diff, regex("^-[^-]", multiline = TRUE))
    ) %>%
    ungroup()
  
  # Сохраняем
  diffs_list[[i]] <- diff_data
}

# Объединяем в один датафрейм
diffs_df <- bind_rows(diffs_list)

# Предполагаем, что уже есть commits_df и diffs_df
# Убедимся, что поле для join одинаковое
diffs_df$commit_id <- as.character(diffs_df$commit_id)
commits_df$id <- as.character(commits_df$id)

# Объединение
full_df <- merge(diffs_df, commits_df, by.x = "commit_id", by.y = "id")

